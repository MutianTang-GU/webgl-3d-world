(()=>{"use strict";var t="undefined"!=typeof Float32Array?Float32Array:Array;function e(){var e=new t(16);return t!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function r(t,e,r){var i,o,a,s,n,h,c,l,d,u,m,f,v=r[0],M=r[1],A=r[2];return e===t?(t[12]=e[0]*v+e[4]*M+e[8]*A+e[12],t[13]=e[1]*v+e[5]*M+e[9]*A+e[13],t[14]=e[2]*v+e[6]*M+e[10]*A+e[14],t[15]=e[3]*v+e[7]*M+e[11]*A+e[15]):(i=e[0],o=e[1],a=e[2],s=e[3],n=e[4],h=e[5],c=e[6],l=e[7],d=e[8],u=e[9],m=e[10],f=e[11],t[0]=i,t[1]=o,t[2]=a,t[3]=s,t[4]=n,t[5]=h,t[6]=c,t[7]=l,t[8]=d,t[9]=u,t[10]=m,t[11]=f,t[12]=i*v+n*M+d*A+e[12],t[13]=o*v+h*M+u*A+e[13],t[14]=a*v+c*M+m*A+e[14],t[15]=s*v+l*M+f*A+e[15]),t}function i(t,e,r){var i=Math.sin(r),o=Math.cos(r),a=e[4],s=e[5],n=e[6],h=e[7],c=e[8],l=e[9],d=e[10],u=e[11];return e!==t&&(t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[4]=a*o+c*i,t[5]=s*o+l*i,t[6]=n*o+d*i,t[7]=h*o+u*i,t[8]=c*o-a*i,t[9]=l*o-s*i,t[10]=d*o-n*i,t[11]=u*o-h*i,t}function o(t,e,r){var i=Math.sin(r),o=Math.cos(r),a=e[0],s=e[1],n=e[2],h=e[3],c=e[8],l=e[9],d=e[10],u=e[11];return e!==t&&(t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15]),t[0]=a*o-c*i,t[1]=s*o-l*i,t[2]=n*o-d*i,t[3]=h*o-u*i,t[8]=a*i+c*o,t[9]=s*i+l*o,t[10]=n*i+d*o,t[11]=h*i+u*o,t}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var t=0,e=arguments.length;e--;)t+=arguments[e]*arguments[e];return Math.sqrt(t)});const a=class{constructor(t,e,r,i,o,a,s){this.vertices=t,this.normals=e,this.indices=r,this.modelViewMatrix=i,this.modelWorldMatrix=o,this.materialColor=a,this.updateFunc=s??((t,e,r)=>{})}update(t,e){this.updateFunc(this,t,e)}},s=new Float32Array([-10,0,-10,10,0,-10,10,0,10,-10,0,10]),n=new Float32Array([0,1,0,0,1,0,0,1,0,0,1,0]),h=new Uint16Array([0,1,2,0,2,3]);let c=e();r(c,c,[0,-1,0]);const l=new a(s,n,h,c,e(),[.15,.6,.15],((t,e)=>{}));function d(t){var e=(t||1)/2,r=[],i=[],o=[],a=[];function s(t,e){var s,n=r.length/3;for(s=0;s<12;s++)r.push(t[s]);for(s=0;s<4;s++)i.push(e[0],e[1],e[2]);o.push(0,0,1,0,1,1,0,1),a.push(n,n+1,n+2,n,n+2,n+3)}return s([-e,-e,e,e,-e,e,e,e,e,-e,e,e],[0,0,1]),s([-e,-e,-e,-e,e,-e,e,e,-e,e,-e,-e],[0,0,-1]),s([-e,e,-e,-e,e,e,e,e,e,e,e,-e],[0,1,0]),s([-e,-e,-e,e,-e,-e,e,-e,e,-e,-e,e],[0,-1,0]),s([e,-e,-e,e,e,-e,e,e,e,e,-e,e],[1,0,0]),s([-e,-e,-e,-e,-e,e,-e,e,e,-e,e,-e],[-1,0,0]),{vertexPositions:new Float32Array(r),vertexNormals:new Float32Array(i),vertexTextureCoords:new Float32Array(o),indices:new Uint16Array(a)}}const{vertexPositions:u,vertexNormals:m,indices:f}=d(.2);let v=e();r(v,v,[0,0,-6]);const M=new a(u,m,f,v,e(),[.8,.2,.1],((t,e)=>{o(t.modelViewMatrix,t.modelViewMatrix,.001*e)})),{vertexPositions:A,vertexNormals:g,indices:w}=d(.2);let x=e();r(x,x,[2,0,-6]);const p=new a(A,g,w,x,e(),[.1,.2,.8],((t,e)=>{o(t.modelViewMatrix,t.modelViewMatrix,-.001*e)})),{vertexPositions:y,vertexNormals:P,indices:F}=function(t,e,r,i){t=t||.5,e=e||t/3;var o,a,s,n,h,c,l,d,u,m,f,v=((r=r||32)+1)*((i=i||16)+1),M=new Float32Array(3*v),A=new Float32Array(3*v),g=new Float32Array(2*v),w=new Uint16Array(2*r*i*3),x=2*Math.PI/r,p=2*Math.PI/i,y=(e+t)/2,P=t-y,F=0,b=0;for(a=0;a<=i;a++)for(n=-Math.PI+a*p,d=Math.cos(n),l=Math.sin(n),o=0;o<=r;o++)s=o*x,u=(h=Math.cos(s))*(y+P*d),m=(c=Math.sin(s))*(y+P*d),f=l*P,M[F]=u,A[F++]=h*d,M[F]=m,A[F++]=c*d,M[F]=f,A[F++]=l,g[b++]=o/r,g[b++]=a/i;var E=0;for(a=0;a<i;a++){var R=a*(r+1),T=(a+1)*(r+1);for(o=0;o<r;o++)w[E++]=R+o,w[E++]=T+o+1,w[E++]=T+o,w[E++]=R+o,w[E++]=R+o+1,w[E++]=T+o+1}return{vertexPositions:M,vertexNormals:A,vertexTextureCoords:g,indices:w}}(.5,.2,20,20);let b=e();r(b,b,[-2,0,-6]);const E=new a(y,P,F,b,e(),[.8,.8,.1],((t,e)=>{})),{vertexPositions:R,vertexNormals:T,indices:U}=function(t,e,r,i){t=t||.5,e=e||2*t;var o=[0,.5,.75,.875,.9375],a=o.length*((r=r||32)+1)+r;a+=r+2;var s=(o.length-1)*r*2+r;s+=r;var n,h,c,l=new Float32Array(3*a),d=new Float32Array(3*a),u=new Float32Array(2*a),m=new Uint16Array(3*s),f=Math.sqrt(e*e+t*t),v=e/f,M=t/f,A=2*Math.PI/r,g=0,w=0,x=0;for(h=0;h<o.length;h++){var p=h%2==0?0:.5;for(n=0;n<=r;n++){var y=-e/2+o[h]*e;c=(n+p)*A;var P=Math.cos(c),F=Math.sin(c);l[g]=P*t*(1-o[h]),d[g++]=P*v,l[g]=F*t*(1-o[h]),d[g++]=F*v,l[g]=y,d[g++]=M,u[w++]=(n+p)/r,u[w++]=o[h]}}for(x=0,h=0;h<o.length-1;h++){var b=h*(r+1),E=(h+1)*(r+1);for(n=0;n<r;n++)m[x++]=b+n,m[x++]=E+n+1,m[x++]=E+n,m[x++]=b+n,m[x++]=b+n+1,m[x++]=E+n+1}var R=g/3-(r+1);for(n=0;n<r;n++)c=(n+.5)*A,P=Math.cos(c),F=Math.sin(c),l[g]=0,d[g++]=P*v,l[g]=0,d[g++]=F*v,l[g]=e/2,d[g++]=M,u[w++]=(n+.5)/r,u[w++]=1;for(n=0;n<r;n++)m[x++]=R+n,m[x++]=R+n+1,m[x++]=R+(r+1)+n;var T=g/3;for(l[g]=0,d[g++]=0,l[g]=0,d[g++]=0,l[g]=-e/2,d[g++]=-1,u[w++]=.5,u[w++]=.5,n=0;n<=r;n++)c=2*Math.PI-n*A,P=Math.cos(c),F=Math.sin(c),l[g]=P*t,d[g++]=0,l[g]=F*t,d[g++]=0,l[g]=-e/2,d[g++]=-1,u[w++]=.5-.5*P,u[w++]=.5+.5*F;for(n=0;n<r;n++)m[x++]=T,m[x++]=T+n+1,m[x++]=T+n+2;return{vertexPositions:l,vertexNormals:d,vertexTextureCoords:u,indices:m}}(.3,.5,12);let I=e();r(I,I,[1,0,-9]),i(I,I,-.5*Math.PI);const L=new a(R,T,U,I,e(),[.9,.7,0],((t,i,o)=>{const a=1+Math.sin(.001*o);t.modelWorldMatrix=e(),r(t.modelWorldMatrix,t.modelWorldMatrix,[0,0,a])})),{vertexPositions:S,vertexNormals:C,indices:_}=function(t,e,r){t=t||.5;var i,o,a,s,n,h,c,l=((e=e||32)+1)*((r=r||16)+1),d=new Float32Array(3*l),u=new Float32Array(3*l),m=new Float32Array(2*l),f=new Uint16Array(2*e*r*3),v=2*Math.PI/e,M=Math.PI/r,A=0,g=0;for(i=0;i<=r;i++)for(s=-Math.PI/2+i*M,o=0;o<=e;o++)a=o*v,n=Math.cos(a)*Math.cos(s),h=Math.sin(a)*Math.cos(s),c=Math.sin(s),d[A]=t*n,u[A++]=n,d[A]=t*h,u[A++]=h,d[A]=t*c,u[A++]=c,m[g++]=o/e,m[g++]=i/r;var w=0;for(o=0;o<r;o++){var x=o*(e+1),p=(o+1)*(e+1);for(i=0;i<e;i++)f[w++]=x+i,f[w++]=p+i+1,f[w++]=p+i,f[w++]=x+i,f[w++]=x+i+1,f[w++]=p+i+1}return{vertexPositions:d,vertexNormals:u,vertexTextureCoords:m,indices:f}}(.2,16,8);let D=e();r(D,D,[-2,0,-6]);let B=e();r(B,B,[1,0,0]);const N=[l,M,p,E,L,new a(S,C,_,D,B,[.75,.75,.75],((t,e)=>{o(t.modelViewMatrix,t.modelViewMatrix,.002*e)}))];class k{constructor(){this.position=[0,0,0],this.longitude=0,this.latitude=0}get direction(){return[Math.sin(this.longitude)*Math.cos(this.latitude),Math.sin(this.latitude),-Math.cos(this.longitude)*Math.cos(this.latitude)]}reset(){this.position=[0,0,0],this.longitude=0,this.latitude=0}forward(t){this.position[0]+=t*Math.sin(this.longitude)*Math.cos(this.latitude),this.position[1]+=t*Math.sin(this.latitude),this.position[2]-=t*Math.cos(this.longitude)*Math.cos(this.latitude)}backward(t){this.position[0]-=t*Math.sin(this.longitude)*Math.cos(this.latitude),this.position[1]-=t*Math.sin(this.latitude),this.position[2]+=t*Math.cos(this.longitude)*Math.cos(this.latitude)}left(t){this.position[0]-=t*Math.cos(this.longitude),this.position[2]-=t*Math.sin(this.longitude)}right(t){this.position[0]+=t*Math.cos(this.longitude),this.position[2]+=t*Math.sin(this.longitude)}up(t){this.position[1]+=t}down(t){this.position[1]-=t}turnLeft(t){this.longitude-=t}turnRight(t){this.longitude+=t}tiltUp(t){return this.latitude+=t,!(this.latitude>Math.PI/2&&(this.latitude=Math.PI/2,1))}tiltDown(t){return this.latitude-=t,!(this.latitude<-Math.PI/2&&(this.latitude=-Math.PI/2,1))}}class W{constructor(){this.camera=new k,this.objects=[]}init(){const t=document.getElementById("glcanvas").getContext("webgl2");null!==t?(t.clearColor(1,1,1,1),this.helper=new class{constructor(t,e,r){this.gl=t,this.shaderProgram=this.createShaderProgram(e,r),this.objectOffset=0}createShaderProgram(t,e){const r=this.gl,i=r.createShader(r.VERTEX_SHADER);if(r.shaderSource(i,t),r.compileShader(i),!r.getShaderParameter(i,r.COMPILE_STATUS))throw new Error("An error occurred compiling the shaders"+r.getShaderInfoLog(i));const o=r.createShader(r.FRAGMENT_SHADER);if(r.shaderSource(o,e),r.compileShader(o),!r.getShaderParameter(o,r.COMPILE_STATUS))throw new Error("An error occurred compiling the shaders"+r.getShaderInfoLog(o));const a=r.createProgram();if(r.attachShader(a,i),r.attachShader(a,o),r.linkProgram(a),!r.getProgramParameter(a,r.LINK_STATUS))throw new Error("Unable to initialize the shader program: "+r.getProgramInfoLog(a));return r.useProgram(a),a}bufferData(t,e,r,i,o){const a=this.gl,s=a.createBuffer();a.bindBuffer(a.ARRAY_BUFFER,s),a.bufferData(a.ARRAY_BUFFER,t,a.STATIC_DRAW);const n=a.createBuffer();a.bindBuffer(a.ARRAY_BUFFER,n),a.bufferData(a.ARRAY_BUFFER,e,a.STATIC_DRAW);const h=a.createBuffer();a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,h),a.bufferData(a.ELEMENT_ARRAY_BUFFER,r,a.STATIC_DRAW);const c=a.getAttribLocation(this.shaderProgram,i);a.bindBuffer(a.ARRAY_BUFFER,s);{const t=3,e=a.FLOAT,r=!1,i=0,o=0;a.vertexAttribPointer(c,t,e,r,i,o)}const l=a.getAttribLocation(this.shaderProgram,o);a.bindBuffer(a.ARRAY_BUFFER,n);{const t=3,e=a.FLOAT,r=!1,i=0,o=0;a.vertexAttribPointer(l,t,e,r,i,o)}a.enableVertexAttribArray(c),a.enableVertexAttribArray(l)}clear(){const t=this.gl;t.clearDepth(1),t.enable(t.DEPTH_TEST),t.depthFunc(t.LEQUAL),t.clear(t.COLOR_BUFFER_BIT|t.DEPTH_BUFFER_BIT),this.objectOffset=0}setUniform(t,e){const r=this.gl,i=r.getUniformLocation(this.shaderProgram,t);e instanceof Float32Array?r.uniformMatrix4fv(i,!1,e):e instanceof Array?r.uniform3fv(i,e):"number"==typeof e&&r.uniform1f(i,e)}drawElements(t){const e=this.gl;e.drawElements(e.TRIANGLES,t,e.UNSIGNED_SHORT,2*this.objectOffset),this.objectOffset+=t}}(t,"#version 300 es\nprecision mediump float;in vec3 vertPosition;in vec3 vertNormal;out vec3 v_color;uniform mat4 viewMatrix;uniform mat4 modelToWorldMatrix;uniform mat4 projMatrix;uniform vec3 lightDirection;uniform vec3 ambientLightColor;uniform vec3 materialColor;uniform vec3 diffuseLightColor;void main(){gl_Position=projMatrix*viewMatrix*modelToWorldMatrix*vec4(vertPosition,1.);vec3 A=ambientLightColor*materialColor;mat4 B=transpose(inverse(viewMatrix*modelToWorldMatrix));vec3 C=normalize((B*vec4(vertNormal,0.)).xyz);vec3 D=(modelToWorldMatrix*vec4(vertPosition,1.)).xyz;vec3 E=normalize(lightDirection-D);float F=max(0.,dot(C,E));v_color=diffuseLightColor*materialColor*F+A;}","#version 300 es\nprecision mediump float;in vec3 v_color;out vec4 outColor;void main(){outColor=vec4(v_color,1.);}"),this.gl=t):alert("Unable to initialize WebGL. Your browser or machine may not support it.")}addControllers(){const t=.2;document.addEventListener("keydown",(e=>{switch(e.code){case"KeyW":this.camera.forward(t);break;case"KeyS":this.camera.backward(t);break;case"KeyA":this.camera.left(t);break;case"KeyD":this.camera.right(t);break;case"keyI":case"Space":this.camera.up(t);break;case"keyK":case"ShiftLeft":case"ControlLeft":this.camera.down(t);break;case"KeyJ":case"KeyQ":case"ArrowLeft":this.camera.turnLeft(Math.PI/24);break;case"KeyL":case"KeyE":case"ArrowRight":this.camera.turnRight(Math.PI/24);break;case"ArrowUp":this.camera.tiltUp(Math.PI/48);break;case"ArrowDown":this.camera.tiltDown(Math.PI/48);break;case"KeyR":this.camera.reset()}}))}createObjects(){this.gl;let t=new Float32Array,e=new Float32Array,r=new Uint16Array,i=0;for(let o of N)t=new Float32Array([...t,...o.vertices]),e=new Float32Array([...e,...o.normals]),r=new Uint16Array([...r,...o.indices.map((t=>t+i))]),i+=o.vertices.length/3,this.objects.push(o);this.helper.bufferData(t,e,r,"vertPosition","vertNormal")}draw(t){const a=this.gl,s=this.helper;void 0===this.previousTime&&(this.previousTime=t);const n=t-this.previousTime;this.previousTime=t,s.clear();const h=e();!function(t,e,r,i,o){var a,s=1/Math.tan(e/2);t[0]=s/r,t[1]=0,t[2]=0,t[3]=0,t[4]=0,t[5]=s,t[6]=0,t[7]=0,t[8]=0,t[9]=0,t[11]=-1,t[12]=0,t[13]=0,t[15]=0,null!=o&&o!==1/0?(a=1/(i-o),t[10]=(o+i)*a,t[14]=2*o*i*a):(t[10]=-1,t[14]=-2*i)}(h,45*Math.PI/180,a.canvas.clientWidth/a.canvas.clientHeight,.1,100);const{position:c,latitude:l,longitude:d}=this.camera,[u,m,f]=c,v=e();var M,A,g,w,x,p,y,P,F,b,E,R,T,U,I,L,S,C,_,D,B,N,k;i(v,v,-l),o(v,v,d),r(v,v,[-u,-m,-f]),M=h,g=v,w=(A=h)[0],x=A[1],p=A[2],y=A[3],P=A[4],F=A[5],b=A[6],E=A[7],R=A[8],T=A[9],U=A[10],I=A[11],L=A[12],S=A[13],C=A[14],_=A[15],D=g[0],B=g[1],N=g[2],k=g[3],M[0]=D*w+B*P+N*R+k*L,M[1]=D*x+B*F+N*T+k*S,M[2]=D*p+B*b+N*U+k*C,M[3]=D*y+B*E+N*I+k*_,D=g[4],B=g[5],N=g[6],k=g[7],M[4]=D*w+B*P+N*R+k*L,M[5]=D*x+B*F+N*T+k*S,M[6]=D*p+B*b+N*U+k*C,M[7]=D*y+B*E+N*I+k*_,D=g[8],B=g[9],N=g[10],k=g[11],M[8]=D*w+B*P+N*R+k*L,M[9]=D*x+B*F+N*T+k*S,M[10]=D*p+B*b+N*U+k*C,M[11]=D*y+B*E+N*I+k*_,D=g[12],B=g[13],N=g[14],k=g[15],M[12]=D*w+B*P+N*R+k*L,M[13]=D*x+B*F+N*T+k*S,M[14]=D*p+B*b+N*U+k*C,M[15]=D*y+B*E+N*I+k*_,s.setUniform("projMatrix",h),s.setUniform("ambientLightColor",[.6,.6,.6]),s.setUniform("diffuseLightColor",[.8,.8,.8]),s.setUniform("lightDirection",[Math.sin(5e-4*t),.5,Math.cos(5e-4*t)]);for(const e of this.objects)e.update(n,t),s.setUniform("viewMatrix",e.modelViewMatrix),s.setUniform("modelToWorldMatrix",e.modelWorldMatrix),s.setUniform("materialColor",e.materialColor),s.drawElements(e.indices.length,e);requestAnimationFrame((t=>this.draw(t)))}}function O(){const t=new W;t.init(),t.createObjects(),t.addControllers(),requestAnimationFrame((e=>t.draw(e)))}"loading"!==document.readyState?O():document.addEventListener("DOMContentLoaded",O)})();